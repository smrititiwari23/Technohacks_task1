# -*- coding: utf-8 -*-
"""winequality_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IQrITaorfmsB1-daoPIz6DOir4sbvmQ-
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load the Wine Quality dataset from scikit-learn
from sklearn.datasets import load_wine
data = load_wine()

# Create a pandas DataFrame from the dataset
wine_df = pd.DataFrame(data.data, columns=data.feature_names)

# Add the wine quality (target variable) to the DataFrame
wine_df['quality'] = data.target

# Data preprocessing
X = wine_df.drop('quality', axis=1)  # Features
y = wine_df['quality']  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Model evaluation
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Print the evaluation metrics
print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("R-squared:", r2)